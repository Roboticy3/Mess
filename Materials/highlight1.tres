[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeVectorInterp" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "front_facing"

[sub_resource type="VisualShaderNodeColorConstant" id=9]
constant = Color( 0.0862745, 0.792157, 0.0666667, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=10]
constant = Color( 0.0313726, 1, 0.980392, 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=11]
constant = 1.0

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
render_mode depth_draw_always, cull_disabled, specular_schlick_ggx, unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Color:5
	vec3 n_out5p0 = vec3(0.031373, 1.000000, 0.980392);
	float n_out5p1 = 1.000000;

// Color:4
	vec3 n_out4p0 = vec3(0.086274, 0.792157, 0.066667);
	float n_out4p1 = 1.000000;

// Input:3
	bool n_out3p0 = FRONT_FACING;

// VectorMix:2
	vec3 n_out2p0 = mix(n_out5p0, n_out4p0, vec3(n_out3p0 ? 1.0 : 0.0));

// Scalar:6
	float n_out6p0 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -396.462, 137.863 )
modes/cull = 2
modes/depth_draw = 1
flags/unshaded = true
nodes/fragment/0/position = Vector2( 520, 160 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( 320, 180 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -40, 360 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -20, 100 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( -20, 200 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( 300, 340 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 2, 2, 0, 0, 0, 5, 0, 2, 0, 4, 0, 2, 1, 6, 0, 0, 1 )

[resource]
resource_local_to_scene = true
render_priority = 1
shader = SubResource( 6 )
