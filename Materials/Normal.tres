[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

//the size of the board in squares
uniform vec2 size = vec2(2.0, 2.0);
//the last screen position queried
uniform vec2 pos = vec2(-1.0, -1.0);
//the uv position on the mesh of the last screen position queried
varying vec3 uv_out;


void vertex() {
// Output:0
}

void fragment() {
	vec2 large = floor(UV * size);

// Output:0
	ALBEDO = vec3(UV, 0.0);
	
}

void light() {
// Output:0

}
"

[resource]
shader = SubResource( 1 )
shader_param/size = Vector2( 2, 2 )
shader_param/pos = Vector2( -1, -1 )
