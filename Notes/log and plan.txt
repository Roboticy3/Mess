1/21/2022
	- Made wrld_to_uv(), collider thickness intercepts ray and projects it from the wrong spot
	- Made Triangle class, includes lots of fun math functions that might be useful later
	NEXT:
	Make player camera controls, program piece model loader
1/23/2022
	- Made player camera controls
	NEXT:
	make uv viewer shader and square shader where uv's are adjusted by keybinds
	fix uv_from_board and wrld_to_uv
1/26/2022
	 - Stress tested the board creation process
	NEXT:
	>>1/23/2022
	Make BoardMesh model loader create a concave collision shape from ArrayMesh if possible
1/27/2022
	 - reworked collision shape system to work with concave meshes
	 - added quick way to switch to debug mode in wrld_to_uv
	NEXT:
	finish shader-based mode of approaching wrld_to_uv()
	program piece model loader
1/28/2022
	 - fixed half of wrld_to_uv(), learned that shader approach wont work because fragment() cannot send data
	 - learned how to use GLSL
	NEXT:
	find cause of and fix bug with wrld_to_uv() where some positions will fail to pass is_surrounding()
	program piece model loader
1/29/2022
	 - started piece model loader, BoardMesh keeps a cache of hard-to-load data on each type of piece and sends it to each of the pieces, instantiated as children of the board staticbody
	NEXT
	fix piece scale calculation to match piece AABB to its square (may have to be dynamic) add piece table param that lets users disable this
	add piece scale rotation to match the normal of the board on their square (maybe also allow user to disable this)
	change Player.raycast() to work with the piece collision layer of the player's team as well as the board
2/4-5/2022
	 - made piece model loader
	 - made implicit teams phase for default pieces 
	 - made symmetrize and no-symmetrize sub-modes for g phase
	 - began move() function
	 - changed forward vector and ff on pieces to be part of their table
	NEXT
	add implicit modes for every phase that pull from default
	use square_to_mdata, square_to_loc and dot product to create
	make AABB system for pieces 
2/6/2022
	 - started resolve_transforms()
	 - made intruction settings for pieces to resist transforms
	NEXT
	 - make square_to_box() to resolve a board square to a mesh
	 - use square_to_box() to cache selectable selectable squares and scale pieces
2/9/2022
	 - make screen_to_uv() like a chad
	 - that's fucken it
	NEXT
	 - make the scale component of resolve_transforms()
	 - start intruction interpereter
2/11/2022
	 - started square_to_box() again
	 - started update_scale() for PieceMesh
	NEXT
	 - finish system for converting uv square to mesh
		 - maybe change the system so that mesh is instantiated from intersecting faces and the "cropped" instead of trying to instantiate in the right shape as is
2/12/2022
	 - continued work on square_to_box()
	NEXT
	- TAKE A BREAK
2/19/2022
	 - took break
	 - continued work on square_to_box() (now shortening to stb)
	NEXT
	 - make stb match verts in outside to corners
	 - if outside is missing verts, add corner verts in new array and make matching indices in outside negative to distinguish from existing verts
	 - slide outside verts onto edge of two closest corners
2/20/2022
	 - fixed stb
	 - created edge set intersection with bound
	 - fixed square_to_basis() to work with broken team definitions
	NEXT
	 - finish stb by adding system to move verts inward and extrude into a box
2/24/2022
	 - shelfed stb for a bit to start fixing comments
	 - holy shit its 11pm i have school tomorrow
	NEXT
	>>2/20/2022
	 - keep fixin comments m'boy
2/25/2022
	 - fixed file stucture, wasn't as hard as I thought it would be
	 - fixed comments for all the Board and Piece classes, there were some bits not even I could figure out, guess the project really is getting big
	 - started Reader class, which will eventually unite the ready functions for Board and Piece with string function dark magic
	NEXT
	>>2/20/2022
	 - fix rest of comments
3/4/2022
	 - continued work on Reader class, fixing Board comments in the process
	NEXT
	>>2/25/2022
	 - make Piece use Reader class
	 - start movement algorithm
3/6/2022
	 - Piece and Board both use Reader class
	 - I don't know why but Board isn't loading Piece correctly and that error is propogating throughout the whole code
	 - Designed algorithm for squishing mesh in stb
	 - Added primitive square checking to Instruction
	NEXT
	>>3/4/2022
3/16/2022
	 - Started building skeleton for movement algorithm
	 - More or less finished revising comments
	 - Patched vectorize() to use a separate format() method for faster recursion calls
	 - expanded featureset of piece instructions to include checking properties of other pieces
	NEXT
	>>2/20/2022
	 - begin Board-side interperetation of mark phase vectors (keep working on movement algorithm)
3/17/2022
	 - realized everything i did yesterday doesn't work
	 - cleaned up format() and to_string_array() methods in Instruction.gd
	NEXT
	 - fix reading other piece squares for the love of god
3/18/2022
	 - I'm not quite sure what I did and did not fix
	 - added debugging for piece marks using bad stb
	NEXT
	 - keep debugging pieces
3/19/2022
	 - Finished skeleton of the mark() method
	 - fixed Piece.relative_to_square to not have so many rounding errors
	NEXT
	 - add syntax for different types of moves (diagonal, L-path, jump, infinite) to be interpereted by mark() and update wiki to match
	 - optimize stb so I can keep working on it later
3/23/2022
	 - started mark_step() method
	 - redid like half of vectorize() (its better now)
	NEXT
	 - optimize stb
	 - keep working on mark_step()
3/25/2022
	 - finished basics of mark_step
	NEXT
	 - fix conditionals (again >:'|)
	 - optimize stb
3/31/2022
	 - did some debugging here and there
	NEXT
	 - keep working on stb
	 - start setting up movement
4/2/2022
	 - kept working on stb
	NEXT
	 - keep working on stb
	 - start setting up movement
4/4/2022
	 - reworked uv_to_mdata to be more flexible, runs slower
	 - kept working on stb
	NEXT
	 - take a break from stb to start setting up movement
	 - make uv_to_mdata run quickly with a node graph of the mesh
4/5/2022
	 - began redesigning stb on a new, more efficient path
	 - made models for the individual pieces
	NEXT
	 - rework edge_set_intersection to return intersection points as well as indices
	 - START WORKING ON PIECE MOVEMENT YOU LAZY BASTARD
4/10/2022
	 - quit work on stb, meshes are totally beyond me and I keep just getting mad instead of getting any work done
	NEXT
	 - start working on piece movement
4/12/2022
	 - finished JHSSF scholarship (lmao)
	 - got piece selection and logic movement skeleton working
	NEXT
	 - get visual movement working and add movement events
4/14/2022
	 - started repairing conditionals and visuals to work with piece movement
	NEXT
	 - add variable updating via appending variable assigns onto the end of marks
4/20/2022
	- kept working on piece movement, accidentally broke everything. whoops
	NEXT
	 - debug all the shit i broke (mainly mark_step())
4/22/2022
	 - fixed everything (yay!)
4/28/2022
	 - took a break
	 - started working on making board builtins functional and adding more
	 - started working on b_klein board for stress-testing
	NEXT
	 - finish setting up board builtins
	 - start working on either take phase or portals (portals are very scary)
4/29/2022
	 - added rook to b_klein to see how laggy it is (its very laggy)
	 - finished setting up board builtins
	 - encountered a glitch with BoardConverter.raycast that makes it return intersections it probably shouldnt
	NEXT
	 - fix raycast
	 - optimize stb (dread)
	 - study for exams
5/5/2022
	 - mostly finished first half of stb (don't lose it this time)
	 - created mdata_to_array() method to convert uv_to_mdata() and square_to_mdata() values to vertex arrays
	NEXT
	 - fix bug with stb that does not add verts to outer when it should
	 - start NodeGraph class to eventually lead to much more efficient uv_to_mdata() calls
5/8/2022
	 - fixed bug with stb so now it adds verts correctly, only need to finish corners
	 - made MeshGraph and DuplicateMap classes to wrap mdt MeshDataTool and duplicates Dictionary while handling mesh graphs and array to vertex data conversions respectively instead of BoardConverter
	 - realized the extent to which it is going to be a pain in my ass to implement MeshGraph searching into uv_to_mdata(). It will probably require a complete rewrite of Triangle.gd
	NEXT
	 - completely rewrite Triangle.gd to make sense with the current system of vertex arrays and reintegrate it into uv_to_mpos() and uv_to_mdata()
	 - fix raycast() so it always takes the closest point to the from point, not seemingly random intersections